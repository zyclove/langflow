"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8298],{16879:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"type":"api","id":"build-public-tmp","title":"Build Public Tmp","description":"","slug":"/build-public-tmp","frontMatter":{},"api":{"tags":["Chat"],"description":"Build a public flow without requiring authentication.\\n\\nThis endpoint is specifically for public flows that don\'t require authentication.\\nIt uses a client_id cookie to create a deterministic flow ID for tracking purposes.\\n\\nThe endpoint:\\n1. Verifies the requested flow is marked as public in the database\\n2. Creates a deterministic UUID based on client_id and flow_id\\n3. Uses the flow owner\'s permissions to build the flow\\n\\nRequirements:\\n- The flow must be marked as PUBLIC in the database\\n- The request must include a client_id cookie\\n\\nArgs:\\n    flow_id: UUID of the public flow to build\\n    background_tasks: Background tasks manager\\n    inputs: Optional input values for the flow\\n    data: Optional flow data\\n    files: Optional files to include\\n    stop_component_id: Optional ID of component to stop at\\n    start_component_id: Optional ID of component to start from\\n    log_builds: Whether to log the build process\\n    flow_name: Optional name for the flow\\n    request: FastAPI request object (needed for cookie access)\\n    queue_service: Queue service for job management\\n    event_delivery: Optional event delivery type - default is streaming\\n\\nReturns:\\n    Dict with job_id that can be used to poll for build status","operationId":"build_public_tmp_api_v1_build_public_tmp__flow_id__flow_post","parameters":[{"name":"flow_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Flow Id"}},{"name":"stop_component_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Stop Component Id"}},{"name":"start_component_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Start Component Id"}},{"name":"log_builds","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"default":true,"title":"Log Builds"}},{"name":"flow_name","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Flow Name"}},{"name":"event_delivery","in":"query","required":false,"schema":{"type":"string","enum":["streaming","direct","polling"],"title":"EventDeliveryType"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"inputs":{"anyOf":[{"properties":{"components":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Components","default":[]},"input_value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Input Value"},"session":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Session"},"type":{"anyOf":[{"type":"string","enum":["chat","text","any"]},{"type":"null"}],"title":"Type","description":"Defines on which components the input value should be applied. \'any\' applies to all input components.","default":"any"}},"additionalProperties":false,"type":"object","title":"InputValueRequest","examples":[{"components":["components_id","Component Name"],"input_value":"input_value","session":"session_id"},{"components":["Component Name"],"input_value":"input_value"},{"input_value":"input_value"},{"components":["Component Name"],"input_value":"input_value","session":"session_id"},{"input_value":"input_value","session":"session_id"},{"input_value":"input_value","type":"chat"},{"input_value":"{\\"key\\": \\"value\\"}","type":"json"}]},{"type":"null"}]},"data":{"anyOf":[{"properties":{"nodes":{"items":{"type":"object"},"type":"array","title":"Nodes"},"edges":{"items":{"type":"object"},"type":"array","title":"Edges"},"viewport":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Viewport"}},"type":"object","required":["nodes","edges"],"title":"FlowDataRequest"},{"type":"null"}]},"files":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Files"}},"type":"object","title":"Body_build_public_tmp_api_v1_build_public_tmp__flow_id__flow_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"properties":{"detail":{"items":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"}}}}},"method":"post","path":"/api/v1/build_public_tmp/{flow_id}/flow","securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"api/v1/login"}}},"API key query":{"type":"apiKey","in":"query","name":"x-api-key"},"API key header":{"type":"apiKey","in":"header","name":"x-api-key"}},"jsonRequestBodyExample":{},"info":{"title":"Langflow","version":"1.4.3"},"postman":{"name":"Build Public Tmp","description":{"content":"Build a public flow without requiring authentication.\\n\\nThis endpoint is specifically for public flows that don\'t require authentication.\\nIt uses a client_id cookie to create a deterministic flow ID for tracking purposes.\\n\\nThe endpoint:\\n1. Verifies the requested flow is marked as public in the database\\n2. Creates a deterministic UUID based on client_id and flow_id\\n3. Uses the flow owner\'s permissions to build the flow\\n\\nRequirements:\\n- The flow must be marked as PUBLIC in the database\\n- The request must include a client_id cookie\\n\\nArgs:\\n    flow_id: UUID of the public flow to build\\n    background_tasks: Background tasks manager\\n    inputs: Optional input values for the flow\\n    data: Optional flow data\\n    files: Optional files to include\\n    stop_component_id: Optional ID of component to stop at\\n    start_component_id: Optional ID of component to start from\\n    log_builds: Whether to log the build process\\n    flow_name: Optional name for the flow\\n    request: FastAPI request object (needed for cookie access)\\n    queue_service: Queue service for job management\\n    event_delivery: Optional event delivery type - default is streaming\\n\\nReturns:\\n    Dict with job_id that can be used to poll for build status","type":"text/plain"},"url":{"path":["api","v1","build_public_tmp",":flow_id","flow"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"stop_component_id","value":"<string>"},{"disabled":false,"key":"start_component_id","value":"<string>"},{"disabled":false,"key":"log_builds","value":"<boolean>"},{"disabled":false,"key":"flow_name","value":"<string>"},{"disabled":false,"key":"event_delivery","value":"<string>"}],"variable":[{"disabled":false,"description":{"content":"(Required) ","type":"text/plain"},"type":"any","value":"<uuid>","key":"flow_id"}]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n  \\"inputs\\": {\\n    \\"components\\": [\\n      \\"<string>\\",\\n      \\"<string>\\"\\n    ],\\n    \\"input_value\\": \\"<string>\\",\\n    \\"session\\": \\"<string>\\",\\n    \\"type\\": \\"<string>\\"\\n  },\\n  \\"data\\": {\\n    \\"nodes\\": [\\n      \\"<object>\\",\\n      \\"<object>\\"\\n    ],\\n    \\"edges\\": [\\n      \\"<object>\\",\\n      \\"<object>\\"\\n    ],\\n    \\"viewport\\": \\"<object>\\"\\n  },\\n  \\"files\\": [\\n    \\"<string>\\",\\n    \\"<string>\\"\\n  ]\\n}","options":{"raw":{"language":"json"}}}}},"source":"@site/openapi.json","sourceDirName":".","permalink":"/api/build-public-tmp","previous":{"title":"Build Vertex Stream","permalink":"/api/build-vertex-stream"},"next":{"title":"Get All","permalink":"/api/get-all"}}');var s=n(74848),l=n(28453);const o={},a="Build Public Tmp",r=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"build-public-tmp",children:"Build Public Tmp"})}),"\n",(0,s.jsx)(t.p,{children:"Build a public flow without requiring authentication."}),"\n",(0,s.jsx)(t.p,{children:"This endpoint is specifically for public flows that don't require authentication.\nIt uses a client_id cookie to create a deterministic flow ID for tracking purposes."}),"\n",(0,s.jsx)(t.p,{children:"The endpoint:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Verifies the requested flow is marked as public in the database"}),"\n",(0,s.jsx)(t.li,{children:"Creates a deterministic UUID based on client_id and flow_id"}),"\n",(0,s.jsx)(t.li,{children:"Uses the flow owner's permissions to build the flow"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Requirements:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The flow must be marked as PUBLIC in the database"}),"\n",(0,s.jsx)(t.li,{children:"The request must include a client_id cookie"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Args:\nflow_id: UUID of the public flow to build\nbackground_tasks: Background tasks manager\ninputs: Optional input values for the flow\ndata: Optional flow data\nfiles: Optional files to include\nstop_component_id: Optional ID of component to stop at\nstart_component_id: Optional ID of component to start from\nlog_builds: Whether to log the build process\nflow_name: Optional name for the flow\nrequest: FastAPI request object (needed for cookie access)\nqueue_service: Queue service for job management\nevent_delivery: Optional event delivery type - default is streaming"}),"\n",(0,s.jsx)(t.p,{children:"Returns:\nDict with job_id that can be used to poll for build status"}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"flow_id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" uuid"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"})]})})})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Query Parameters"})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"stop_component_id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Stop Component Id"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"start_component_id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Start Component Id"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"log_builds"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Log Builds"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"flow_name"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Flow Name"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"event_delivery"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" EventDeliveryType"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Possible values:"})," [",(0,s.jsx)(t.code,{children:"streaming"}),", ",(0,s.jsx)(t.code,{children:"direct"}),", ",(0,s.jsx)(t.code,{children:"polling"}),"]"]})})]})})]})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Request Body "}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"inputs"}),(0,s.jsx)("span",{style:{opacity:"0.6"}})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"data"}),(0,s.jsx)("span",{style:{opacity:"0.6"}})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"files"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Files"})]})})]})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"200"})}),(0,s.jsx)("div",{children:(0,s.jsx)(t.p,{children:"Successful Response"})})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("td",{children:(0,s.jsx)("span",{style:{opacity:"0.6"},children:" undefined"})})})})]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"422"})}),(0,s.jsx)("div",{children:(0,s.jsx)(t.p,{children:"Validation Error"})})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"detail"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"loc"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" undefined[]"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"msg"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Message"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"type"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Error Type"})]})})]})})]})})})]})})]})})]})]})]})}function c(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},l=i.createContext(s);function o(e){const t=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);