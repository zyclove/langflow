"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8196],{6091:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"type":"api","id":"build-vertex","title":"Build Vertex","description":"","slug":"/build-vertex","frontMatter":{},"api":{"tags":["Chat"],"description":"Build a vertex instead of the entire graph.\\n\\nArgs:\\n    flow_id (str): The ID of the flow.\\n    vertex_id (str): The ID of the vertex to build.\\n    background_tasks (BackgroundTasks): The background tasks dependency.\\n    inputs (Optional[InputValueRequest], optional): The input values for the vertex. Defaults to None.\\n    files (List[str], optional): The files to use. Defaults to None.\\n    current_user (Any, optional): The current user dependency. Defaults to Depends(get_current_active_user).\\n\\nReturns:\\n    VertexBuildResponse: The response containing the built vertex information.\\n\\nRaises:\\n    HTTPException: If there is an error building the vertex.","operationId":"build_vertex_api_v1_build__flow_id__vertices__vertex_id__post","deprecated":true,"security":[{"OAuth2PasswordBearer":[]},{"API key query":[]},{"API key header":[]}],"parameters":[{"name":"flow_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Flow Id"}},{"name":"vertex_id","in":"path","required":true,"schema":{"type":"string","title":"Vertex Id"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"inputs":{"anyOf":[{"properties":{"components":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Components","default":[]},"input_value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Input Value"},"session":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Session"},"type":{"anyOf":[{"type":"string","enum":["chat","text","any"]},{"type":"null"}],"title":"Type","description":"Defines on which components the input value should be applied. \'any\' applies to all input components.","default":"any"}},"additionalProperties":false,"type":"object","title":"InputValueRequest","examples":[{"components":["components_id","Component Name"],"input_value":"input_value","session":"session_id"},{"components":["Component Name"],"input_value":"input_value"},{"input_value":"input_value"},{"components":["Component Name"],"input_value":"input_value","session":"session_id"},{"input_value":"input_value","session":"session_id"},{"input_value":"input_value","type":"chat"},{"input_value":"{\\"key\\": \\"value\\"}","type":"json"}]},{"type":"null"}]},"files":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Files"}},"type":"object","title":"Body_build_vertex_api_v1_build__flow_id__vertices__vertex_id__post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"properties":{"id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"},"inactivated_vertices":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Inactivated Vertices"},"next_vertices_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Next Vertices Ids"},"top_level_vertices":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Top Level Vertices"},"valid":{"type":"boolean","title":"Valid"},"params":{"anyOf":[{},{"type":"null"}],"title":"Params"},"data":{"type":"object"},"timestamp":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Timestamp"}},"type":"object","required":["valid","data"],"title":"VertexBuildResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"properties":{"detail":{"items":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"}}}}},"method":"post","path":"/api/v1/build/{flow_id}/vertices/{vertex_id}","securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"api/v1/login"}}},"API key query":{"type":"apiKey","in":"query","name":"x-api-key"},"API key header":{"type":"apiKey","in":"header","name":"x-api-key"}},"jsonRequestBodyExample":{},"info":{"title":"Langflow","version":"1.4.3"},"postman":{"name":"Build Vertex","description":{"content":"Build a vertex instead of the entire graph.\\n\\nArgs:\\n    flow_id (str): The ID of the flow.\\n    vertex_id (str): The ID of the vertex to build.\\n    background_tasks (BackgroundTasks): The background tasks dependency.\\n    inputs (Optional[InputValueRequest], optional): The input values for the vertex. Defaults to None.\\n    files (List[str], optional): The files to use. Defaults to None.\\n    current_user (Any, optional): The current user dependency. Defaults to Depends(get_current_active_user).\\n\\nReturns:\\n    VertexBuildResponse: The response containing the built vertex information.\\n\\nRaises:\\n    HTTPException: If there is an error building the vertex.","type":"text/plain"},"url":{"path":["api","v1","build",":flow_id","vertices",":vertex_id"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"description":{"content":"(Required) ","type":"text/plain"},"type":"any","value":"<uuid>","key":"flow_id"},{"disabled":false,"description":{"content":"(Required) ","type":"text/plain"},"type":"any","value":"<string>","key":"vertex_id"}]},"header":[{"key":"Content-Type","value":"application/json"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n  \\"inputs\\": {\\n    \\"components\\": [\\n      \\"<string>\\",\\n      \\"<string>\\"\\n    ],\\n    \\"input_value\\": \\"<string>\\",\\n    \\"session\\": \\"<string>\\",\\n    \\"type\\": \\"<string>\\"\\n  },\\n  \\"files\\": [\\n    \\"<string>\\",\\n    \\"<string>\\"\\n  ]\\n}","options":{"raw":{"language":"json"}}},"auth":{"type":"oauth2","oauth2":[{"type":"any","value":"api/v1/login","key":"accessTokenUrl"},{"type":"any","value":"password_credentials","key":"grant_type"}]}}},"source":"@site/openapi.json","sourceDirName":".","permalink":"/api/build-vertex","previous":{"title":"Cancel Build","permalink":"/api/cancel-build"},"next":{"title":"Build Vertex Stream","permalink":"/api/build-vertex-stream"}}');var s=n(74848),r=n(28453);const l={},a="Build Vertex",o=[];function d(e){const t={admonition:"admonition",h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"build-vertex",children:"Build Vertex"})}),"\n",(0,s.jsx)(t.admonition,{title:"deprecated",type:"caution",children:(0,s.jsx)(t.p,{children:"This endpoint has been deprecated and may be removed in future versions of the API."})}),"\n",(0,s.jsx)(t.p,{children:"Build a vertex instead of the entire graph."}),"\n",(0,s.jsx)(t.p,{children:"Args:\nflow_id (str): The ID of the flow.\nvertex_id (str): The ID of the vertex to build.\nbackground_tasks (BackgroundTasks): The background tasks dependency.\ninputs (Optional[InputValueRequest], optional): The input values for the vertex. Defaults to None.\nfiles (List[str], optional): The files to use. Defaults to None.\ncurrent_user (Any, optional): The current user dependency. Defaults to Depends(get_current_active_user)."}),"\n",(0,s.jsx)(t.p,{children:"Returns:\nVertexBuildResponse: The response containing the built vertex information."}),"\n",(0,s.jsx)(t.p,{children:"Raises:\nHTTPException: If there is an error building the vertex."}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"flow_id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" uuid"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"vertex_id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Vertex Id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"})]})})]})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Request Body "}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"inputs"}),(0,s.jsx)("span",{style:{opacity:"0.6"}})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"files"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Files"})]})})]})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"200"})}),(0,s.jsx)("div",{children:(0,s.jsx)(t.p,{children:"Successful Response"})})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Id"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"inactivated_vertices"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Inactivated Vertices"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"next_vertices_ids"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Next Vertices Ids"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"top_level_vertices"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Top Level Vertices"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"valid"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Valid"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"params"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Params"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"data"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" object"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"timestamp"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Timestamp"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"})]})})]})]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"422"})}),(0,s.jsx)("div",{children:(0,s.jsx)(t.p,{children:"Validation Error"})})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"detail"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"loc"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" undefined[]"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"msg"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Message"})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"type"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" Error Type"})]})})]})})]})})})]})})]})})]})]})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);